trigger:
  branches:
    include:
      - master
  tags:
    include:
      - v*
variables:
  isReleaseBuild: $[contains(variables['Build.SourceBranch'], 'tags')]
jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '>=10.x'
        displayName: 'Install Node.js'
      - script: |
          npm ci
          npm run lint
          npm run build
        displayName: 'Build'
      - script: |
          npm run dist
        displayName: 'Bundle'
      - script: |
          npm install -g vsce
          vsce package -o '$(Build.ArtifactStagingDirectory)/texlab.vsix'
        displayName: 'Package'
      - publish: $(Build.ArtifactStagingDirectory)
        artifact: Extension
        condition: and(succeeded(), eq(variables['isReleaseBuild'], 'true'))
        displayName: 'Publish extension artifact'
  - job: Publish
    dependsOn: Build
    condition: and(succeeded('Build'), eq(variables['isReleaseBuild'], 'true'))
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - download: current
        artifact: Extension
      - task: NodeTool@0
        inputs:
          versionSpec: '>=10.x'
        displayName: 'Install Node.js'
      - script: |
          npm install -g vsce
          vsce publish -p $VSCE_TOKEN --packagePath "$(Pipeline.Workspace)/Extension/texlab.vsix"
        env:
          VSCE_TOKEN: $(vsceToken)
        displayName: 'Publish to marketplace'
      - task: GitHubRelease@0
        inputs:
          gitHubConnection: latex-lsp
          repositoryName: latex-lsp/texlab-vscode
          assets: '$(Pipeline.Workspace)/Extension/texlab.vsix'
        displayName: 'Publish to GitHub'
